DROP TABLE IF EXISTS sh_comment CASCADE;
DROP TABLE IF EXISTS sh_booking CASCADE;
DROP TABLE IF EXISTS sh_item CASCADE;
DROP TABLE IF EXISTS sh_request CASCADE;
DROP TABLE IF EXISTS sh_user CASCADE;

CREATE TABLE IF NOT EXISTS sh_user (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL UNIQUE,
    CONSTRAINT user_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS sh_request (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(2000) NOT NULL,
    created TIMESTAMP NOT NULL,
    requestor_id BIGINT NOT NULL,
    CONSTRAINT request_pk PRIMARY KEY (id),
    CONSTRAINT request_user_fk FOREIGN KEY (requestor_id) REFERENCES sh_user
);

CREATE TABLE IF NOT EXISTS sh_item (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(5000) NOT NULL,
    available BOOLEAN DEFAULT TRUE,
    user_id BIGINT NOT NULL,
    request_id BIGINT,
    CONSTRAINT item_pk PRIMARY KEY (id),
    CONSTRAINT item_user_fk FOREIGN KEY (user_id) REFERENCES sh_user,
    CONSTRAINT item_request_fk FOREIGN KEY (request_id) REFERENCES sh_request
);

CREATE TABLE IF NOT EXISTS sh_booking (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date TIMESTAMP NOT NULL,
    end_date TIMESTAMP NOT NULL,
    item_id BIGINT NOT NULL,
    booker_id BIGINT NOT NULL,
    status VARCHAR(15) NOT NULL,
    CONSTRAINT booking_pk PRIMARY KEY (id),
    CONSTRAINT booking_user_fk FOREIGN KEY (booker_id) REFERENCES sh_user,
    CONSTRAINT booking_item_fk FOREIGN KEY (item_id) REFERENCES sh_item
);

CREATE TABLE IF NOT EXISTS sh_comment (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text VARCHAR(2000) NOT NULL,
    created TIMESTAMP NOT NULL,
    author_id BIGINT NOT NULL,
    item_id BIGINT NOT NULL,
    CONSTRAINT comment_pk PRIMARY KEY (id),
    CONSTRAINT comment_user_fk FOREIGN KEY (author_id) REFERENCES sh_user,
    CONSTRAINT comment_item_fk FOREIGN KEY (item_id) REFERENCES sh_item
);